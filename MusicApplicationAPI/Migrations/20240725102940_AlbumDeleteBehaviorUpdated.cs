using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MusicApplicationAPI.Migrations
{
    public partial class AlbumDeleteBehaviorUpdated : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Songs_Albums_AlbumId",
                table: "Songs");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 183, 223, 126, 192, 214, 128, 47, 207, 173, 243, 95, 76, 23, 112, 80, 223, 112, 142, 223, 119, 174, 10, 90, 55, 82, 25, 68, 195, 68, 250, 129, 116, 247, 187, 212, 99, 191, 47, 39, 168, 212, 34, 47, 115, 113, 35, 51, 152, 15, 153, 9, 183, 76, 76, 250, 34, 30, 80, 174, 95, 65, 219, 48, 90 }, new byte[] { 183, 242, 60, 241, 12, 104, 48, 200, 183, 22, 195, 40, 172, 5, 213, 105, 249, 80, 213, 149, 203, 225, 127, 204, 136, 245, 93, 140, 12, 137, 156, 110, 214, 214, 9, 4, 99, 164, 82, 145, 134, 26, 219, 24, 52, 47, 162, 49, 14, 223, 170, 245, 152, 15, 18, 187, 39, 229, 243, 16, 84, 223, 16, 82, 112, 138, 140, 160, 123, 160, 248, 66, 218, 110, 186, 142, 44, 94, 235, 107, 1, 175, 185, 195, 76, 179, 57, 194, 72, 154, 29, 227, 120, 115, 220, 176, 184, 172, 189, 110, 254, 249, 38, 179, 166, 32, 67, 224, 71, 151, 201, 205, 245, 141, 103, 86, 168, 69, 167, 45, 10, 46, 240, 168, 10, 2, 160, 110 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 171, 197, 64, 156, 129, 191, 215, 139, 140, 212, 183, 42, 10, 237, 125, 108, 66, 0, 17, 6, 114, 43, 165, 66, 221, 152, 79, 99, 71, 101, 152, 5, 180, 138, 213, 100, 141, 185, 11, 184, 132, 193, 218, 12, 87, 108, 80, 63, 25, 155, 181, 182, 55, 125, 161, 4, 223, 77, 118, 27, 78, 77, 169, 173 }, new byte[] { 183, 242, 60, 241, 12, 104, 48, 200, 183, 22, 195, 40, 172, 5, 213, 105, 249, 80, 213, 149, 203, 225, 127, 204, 136, 245, 93, 140, 12, 137, 156, 110, 214, 214, 9, 4, 99, 164, 82, 145, 134, 26, 219, 24, 52, 47, 162, 49, 14, 223, 170, 245, 152, 15, 18, 187, 39, 229, 243, 16, 84, 223, 16, 82, 112, 138, 140, 160, 123, 160, 248, 66, 218, 110, 186, 142, 44, 94, 235, 107, 1, 175, 185, 195, 76, 179, 57, 194, 72, 154, 29, 227, 120, 115, 220, 176, 184, 172, 189, 110, 254, 249, 38, 179, 166, 32, 67, 224, 71, 151, 201, 205, 245, 141, 103, 86, 168, 69, 167, 45, 10, 46, 240, 168, 10, 2, 160, 110 } });

            migrationBuilder.AddForeignKey(
                name: "FK_Songs_Albums_AlbumId",
                table: "Songs",
                column: "AlbumId",
                principalTable: "Albums",
                principalColumn: "AlbumId",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_Songs_Albums_AlbumId",
                table: "Songs");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 73, 147, 151, 53, 213, 226, 27, 121, 179, 141, 78, 88, 211, 165, 3, 180, 255, 46, 17, 73, 185, 58, 232, 25, 165, 46, 206, 241, 240, 81, 105, 186, 22, 38, 243, 50, 199, 207, 156, 69, 3, 99, 198, 237, 95, 79, 174, 57, 252, 105, 122, 17, 53, 132, 39, 207, 11, 158, 5, 8, 254, 83, 54, 216 }, new byte[] { 122, 215, 188, 91, 175, 177, 223, 185, 150, 215, 203, 221, 198, 155, 116, 210, 159, 163, 83, 171, 154, 71, 24, 185, 62, 114, 63, 36, 162, 30, 178, 248, 255, 211, 28, 56, 213, 56, 200, 190, 80, 4, 32, 129, 212, 195, 148, 4, 111, 173, 224, 47, 8, 71, 85, 112, 220, 238, 27, 225, 12, 238, 157, 21, 1, 226, 10, 209, 249, 244, 226, 9, 81, 55, 107, 227, 252, 171, 115, 180, 72, 249, 141, 229, 199, 90, 102, 200, 67, 119, 75, 15, 70, 202, 242, 139, 4, 154, 242, 129, 99, 11, 39, 192, 98, 137, 59, 196, 34, 155, 185, 76, 114, 230, 211, 7, 220, 237, 152, 149, 77, 32, 23, 220, 193, 48, 140, 91 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 194, 56, 14, 54, 98, 189, 55, 58, 143, 23, 194, 219, 227, 60, 169, 233, 67, 124, 146, 165, 240, 170, 115, 46, 68, 184, 205, 107, 134, 199, 236, 24, 228, 62, 186, 204, 232, 16, 178, 37, 95, 196, 134, 185, 49, 251, 152, 146, 220, 53, 179, 31, 20, 255, 35, 65, 208, 223, 111, 18, 158, 182, 142, 7 }, new byte[] { 122, 215, 188, 91, 175, 177, 223, 185, 150, 215, 203, 221, 198, 155, 116, 210, 159, 163, 83, 171, 154, 71, 24, 185, 62, 114, 63, 36, 162, 30, 178, 248, 255, 211, 28, 56, 213, 56, 200, 190, 80, 4, 32, 129, 212, 195, 148, 4, 111, 173, 224, 47, 8, 71, 85, 112, 220, 238, 27, 225, 12, 238, 157, 21, 1, 226, 10, 209, 249, 244, 226, 9, 81, 55, 107, 227, 252, 171, 115, 180, 72, 249, 141, 229, 199, 90, 102, 200, 67, 119, 75, 15, 70, 202, 242, 139, 4, 154, 242, 129, 99, 11, 39, 192, 98, 137, 59, 196, 34, 155, 185, 76, 114, 230, 211, 7, 220, 237, 152, 149, 77, 32, 23, 220, 193, 48, 140, 91 } });

            migrationBuilder.AddForeignKey(
                name: "FK_Songs_Albums_AlbumId",
                table: "Songs",
                column: "AlbumId",
                principalTable: "Albums",
                principalColumn: "AlbumId");
        }
    }
}
