using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MusicApplicationAPI.Migrations
{
    public partial class PlaylistDeleteBehaviorUpdated : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_PlaylistSongs_Songs_SongId",
                table: "PlaylistSongs");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 73, 147, 151, 53, 213, 226, 27, 121, 179, 141, 78, 88, 211, 165, 3, 180, 255, 46, 17, 73, 185, 58, 232, 25, 165, 46, 206, 241, 240, 81, 105, 186, 22, 38, 243, 50, 199, 207, 156, 69, 3, 99, 198, 237, 95, 79, 174, 57, 252, 105, 122, 17, 53, 132, 39, 207, 11, 158, 5, 8, 254, 83, 54, 216 }, new byte[] { 122, 215, 188, 91, 175, 177, 223, 185, 150, 215, 203, 221, 198, 155, 116, 210, 159, 163, 83, 171, 154, 71, 24, 185, 62, 114, 63, 36, 162, 30, 178, 248, 255, 211, 28, 56, 213, 56, 200, 190, 80, 4, 32, 129, 212, 195, 148, 4, 111, 173, 224, 47, 8, 71, 85, 112, 220, 238, 27, 225, 12, 238, 157, 21, 1, 226, 10, 209, 249, 244, 226, 9, 81, 55, 107, 227, 252, 171, 115, 180, 72, 249, 141, 229, 199, 90, 102, 200, 67, 119, 75, 15, 70, 202, 242, 139, 4, 154, 242, 129, 99, 11, 39, 192, 98, 137, 59, 196, 34, 155, 185, 76, 114, 230, 211, 7, 220, 237, 152, 149, 77, 32, 23, 220, 193, 48, 140, 91 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 194, 56, 14, 54, 98, 189, 55, 58, 143, 23, 194, 219, 227, 60, 169, 233, 67, 124, 146, 165, 240, 170, 115, 46, 68, 184, 205, 107, 134, 199, 236, 24, 228, 62, 186, 204, 232, 16, 178, 37, 95, 196, 134, 185, 49, 251, 152, 146, 220, 53, 179, 31, 20, 255, 35, 65, 208, 223, 111, 18, 158, 182, 142, 7 }, new byte[] { 122, 215, 188, 91, 175, 177, 223, 185, 150, 215, 203, 221, 198, 155, 116, 210, 159, 163, 83, 171, 154, 71, 24, 185, 62, 114, 63, 36, 162, 30, 178, 248, 255, 211, 28, 56, 213, 56, 200, 190, 80, 4, 32, 129, 212, 195, 148, 4, 111, 173, 224, 47, 8, 71, 85, 112, 220, 238, 27, 225, 12, 238, 157, 21, 1, 226, 10, 209, 249, 244, 226, 9, 81, 55, 107, 227, 252, 171, 115, 180, 72, 249, 141, 229, 199, 90, 102, 200, 67, 119, 75, 15, 70, 202, 242, 139, 4, 154, 242, 129, 99, 11, 39, 192, 98, 137, 59, 196, 34, 155, 185, 76, 114, 230, 211, 7, 220, 237, 152, 149, 77, 32, 23, 220, 193, 48, 140, 91 } });

            migrationBuilder.AddForeignKey(
                name: "FK_PlaylistSongs_Songs_SongId",
                table: "PlaylistSongs",
                column: "SongId",
                principalTable: "Songs",
                principalColumn: "SongId",
                onDelete: ReferentialAction.Cascade);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "FK_PlaylistSongs_Songs_SongId",
                table: "PlaylistSongs");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 125, 214, 140, 189, 63, 114, 212, 237, 171, 211, 140, 224, 62, 22, 81, 65, 219, 11, 54, 225, 129, 131, 229, 168, 154, 3, 69, 136, 254, 150, 21, 186, 75, 189, 107, 234, 199, 183, 56, 127, 249, 208, 174, 137, 219, 154, 91, 109, 231, 232, 38, 3, 169, 171, 3, 124, 55, 190, 207, 117, 238, 170, 183, 29 }, new byte[] { 192, 6, 211, 161, 106, 202, 189, 165, 59, 97, 10, 41, 27, 216, 96, 128, 85, 13, 210, 184, 160, 181, 87, 214, 10, 116, 163, 88, 159, 187, 31, 85, 238, 124, 41, 191, 16, 64, 10, 252, 218, 50, 241, 183, 181, 25, 26, 169, 66, 222, 241, 28, 229, 132, 12, 126, 163, 141, 29, 184, 204, 73, 122, 64, 192, 81, 82, 202, 0, 129, 184, 213, 233, 32, 31, 109, 8, 243, 10, 24, 61, 52, 146, 222, 35, 184, 234, 36, 33, 173, 80, 123, 208, 115, 73, 187, 119, 186, 65, 154, 193, 4, 49, 223, 206, 107, 212, 190, 73, 79, 154, 0, 207, 32, 100, 34, 87, 214, 153, 127, 242, 229, 130, 123, 84, 125, 9, 198 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 27, 176, 214, 157, 251, 117, 56, 194, 19, 82, 245, 82, 54, 99, 160, 129, 41, 31, 69, 24, 209, 206, 174, 116, 220, 68, 60, 245, 244, 198, 198, 33, 79, 169, 78, 166, 95, 116, 71, 63, 53, 85, 187, 166, 113, 168, 249, 233, 111, 20, 118, 36, 39, 113, 174, 17, 194, 23, 52, 91, 135, 95, 150, 104 }, new byte[] { 192, 6, 211, 161, 106, 202, 189, 165, 59, 97, 10, 41, 27, 216, 96, 128, 85, 13, 210, 184, 160, 181, 87, 214, 10, 116, 163, 88, 159, 187, 31, 85, 238, 124, 41, 191, 16, 64, 10, 252, 218, 50, 241, 183, 181, 25, 26, 169, 66, 222, 241, 28, 229, 132, 12, 126, 163, 141, 29, 184, 204, 73, 122, 64, 192, 81, 82, 202, 0, 129, 184, 213, 233, 32, 31, 109, 8, 243, 10, 24, 61, 52, 146, 222, 35, 184, 234, 36, 33, 173, 80, 123, 208, 115, 73, 187, 119, 186, 65, 154, 193, 4, 49, 223, 206, 107, 212, 190, 73, 79, 154, 0, 207, 32, 100, 34, 87, 214, 153, 127, 242, 229, 130, 123, 84, 125, 9, 198 } });

            migrationBuilder.AddForeignKey(
                name: "FK_PlaylistSongs_Songs_SongId",
                table: "PlaylistSongs",
                column: "SongId",
                principalTable: "Songs",
                principalColumn: "SongId",
                onDelete: ReferentialAction.Restrict);
        }
    }
}
