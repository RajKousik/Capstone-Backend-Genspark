using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MusicApplicationAPI.Migrations
{
    public partial class DeleteBehaviorUpdated : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 206, 113, 135, 112, 226, 235, 252, 195, 6, 214, 192, 90, 243, 106, 247, 70, 116, 145, 29, 66, 79, 99, 53, 143, 151, 251, 127, 44, 217, 68, 61, 183, 176, 163, 198, 251, 171, 105, 252, 251, 190, 188, 215, 79, 153, 85, 220, 102, 239, 211, 92, 92, 240, 125, 132, 153, 75, 159, 89, 223, 103, 165, 161, 40 }, new byte[] { 141, 171, 239, 157, 159, 70, 29, 56, 137, 248, 45, 90, 135, 14, 174, 131, 192, 147, 81, 109, 187, 159, 134, 189, 227, 233, 102, 174, 200, 51, 50, 202, 161, 173, 41, 166, 96, 154, 116, 47, 86, 126, 217, 214, 185, 198, 41, 122, 241, 129, 139, 251, 123, 207, 255, 254, 121, 224, 22, 136, 126, 251, 55, 133, 168, 9, 107, 22, 25, 226, 113, 203, 216, 215, 168, 127, 165, 97, 103, 148, 172, 104, 55, 176, 145, 66, 247, 60, 138, 109, 134, 93, 249, 24, 22, 6, 90, 55, 113, 215, 114, 187, 162, 37, 101, 76, 243, 129, 58, 142, 105, 144, 25, 226, 18, 13, 241, 236, 197, 0, 81, 32, 232, 12, 105, 184, 134, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 35, 228, 133, 251, 230, 61, 64, 136, 90, 235, 24, 241, 91, 243, 69, 24, 45, 249, 146, 143, 29, 5, 215, 199, 11, 142, 183, 40, 84, 240, 70, 91, 68, 209, 233, 150, 201, 93, 75, 67, 121, 71, 178, 76, 252, 102, 101, 107, 36, 35, 62, 30, 178, 149, 127, 46, 76, 176, 48, 239, 149, 24, 25, 156 }, new byte[] { 141, 171, 239, 157, 159, 70, 29, 56, 137, 248, 45, 90, 135, 14, 174, 131, 192, 147, 81, 109, 187, 159, 134, 189, 227, 233, 102, 174, 200, 51, 50, 202, 161, 173, 41, 166, 96, 154, 116, 47, 86, 126, 217, 214, 185, 198, 41, 122, 241, 129, 139, 251, 123, 207, 255, 254, 121, 224, 22, 136, 126, 251, 55, 133, 168, 9, 107, 22, 25, 226, 113, 203, 216, 215, 168, 127, 165, 97, 103, 148, 172, 104, 55, 176, 145, 66, 247, 60, 138, 109, 134, 93, 249, 24, 22, 6, 90, 55, 113, 215, 114, 187, 162, 37, 101, 76, 243, 129, 58, 142, 105, 144, 25, 226, 18, 13, 241, 236, 197, 0, 81, 32, 232, 12, 105, 184, 134, 223 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 188, 138, 20, 213, 242, 13, 239, 95, 129, 213, 45, 197, 0, 253, 84, 24, 82, 132, 113, 160, 32, 147, 178, 159, 167, 251, 182, 118, 1, 186, 103, 187, 178, 18, 147, 105, 236, 1, 60, 52, 203, 104, 143, 83, 47, 159, 61, 60, 147, 103, 244, 223, 246, 179, 72, 227, 83, 211, 113, 245, 208, 232, 145, 176 }, new byte[] { 57, 134, 191, 82, 188, 97, 218, 62, 178, 159, 107, 128, 131, 64, 208, 163, 107, 183, 240, 250, 27, 201, 16, 102, 172, 199, 222, 150, 254, 80, 90, 169, 29, 161, 128, 68, 39, 102, 137, 40, 178, 133, 2, 62, 250, 110, 3, 235, 201, 50, 98, 219, 246, 161, 47, 201, 22, 215, 9, 47, 107, 175, 183, 29, 252, 126, 28, 18, 192, 77, 7, 172, 182, 231, 112, 247, 71, 142, 39, 132, 0, 58, 220, 138, 227, 70, 61, 55, 169, 48, 224, 215, 32, 231, 90, 100, 33, 96, 229, 134, 220, 129, 131, 248, 59, 233, 198, 89, 171, 231, 249, 186, 35, 25, 65, 233, 12, 5, 151, 69, 206, 250, 232, 108, 189, 146, 73, 173 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 239, 176, 171, 188, 215, 46, 40, 60, 226, 122, 114, 116, 232, 48, 145, 182, 83, 167, 179, 165, 102, 41, 11, 91, 145, 62, 253, 62, 214, 210, 255, 56, 132, 70, 220, 66, 54, 11, 53, 240, 123, 125, 216, 5, 51, 175, 36, 231, 254, 64, 154, 43, 147, 72, 197, 99, 173, 244, 251, 227, 21, 25, 180, 133 }, new byte[] { 57, 134, 191, 82, 188, 97, 218, 62, 178, 159, 107, 128, 131, 64, 208, 163, 107, 183, 240, 250, 27, 201, 16, 102, 172, 199, 222, 150, 254, 80, 90, 169, 29, 161, 128, 68, 39, 102, 137, 40, 178, 133, 2, 62, 250, 110, 3, 235, 201, 50, 98, 219, 246, 161, 47, 201, 22, 215, 9, 47, 107, 175, 183, 29, 252, 126, 28, 18, 192, 77, 7, 172, 182, 231, 112, 247, 71, 142, 39, 132, 0, 58, 220, 138, 227, 70, 61, 55, 169, 48, 224, 215, 32, 231, 90, 100, 33, 96, 229, 134, 220, 129, 131, 248, 59, 233, 198, 89, 171, 231, 249, 186, 35, 25, 65, 233, 12, 5, 151, 69, 206, 250, 232, 108, 189, 146, 73, 173 } });
        }
    }
}
