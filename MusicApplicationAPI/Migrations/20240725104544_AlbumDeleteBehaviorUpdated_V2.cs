using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace MusicApplicationAPI.Migrations
{
    public partial class AlbumDeleteBehaviorUpdated_V2 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 248, 208, 137, 222, 136, 47, 30, 26, 50, 164, 38, 111, 187, 232, 173, 2, 216, 73, 62, 68, 22, 174, 7, 112, 23, 251, 22, 217, 115, 26, 65, 93, 16, 43, 123, 156, 28, 1, 243, 84, 197, 156, 67, 25, 4, 148, 100, 192, 143, 88, 208, 232, 244, 29, 167, 230, 187, 58, 219, 46, 132, 75, 44, 18 }, new byte[] { 123, 203, 54, 137, 28, 128, 46, 13, 239, 137, 253, 99, 191, 42, 99, 111, 230, 7, 33, 2, 196, 201, 140, 78, 80, 64, 157, 66, 117, 170, 7, 246, 42, 28, 23, 198, 180, 62, 154, 34, 85, 130, 144, 135, 219, 117, 219, 200, 21, 178, 137, 189, 123, 166, 64, 6, 47, 252, 172, 213, 107, 84, 51, 106, 220, 195, 124, 227, 205, 64, 180, 49, 44, 225, 145, 48, 30, 219, 219, 137, 151, 239, 66, 132, 97, 92, 71, 161, 220, 250, 37, 125, 104, 99, 47, 179, 175, 72, 194, 236, 231, 38, 201, 67, 243, 136, 55, 131, 27, 125, 168, 63, 198, 190, 210, 106, 110, 16, 171, 179, 44, 80, 69, 99, 154, 94, 23, 164 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 41, 199, 28, 69, 110, 234, 72, 49, 77, 17, 205, 97, 102, 183, 118, 233, 245, 57, 38, 97, 53, 171, 26, 162, 112, 40, 179, 171, 11, 236, 23, 3, 184, 132, 143, 65, 142, 208, 179, 226, 222, 132, 83, 206, 179, 10, 125, 15, 43, 37, 202, 219, 157, 16, 253, 226, 49, 213, 217, 122, 33, 37, 178, 3 }, new byte[] { 123, 203, 54, 137, 28, 128, 46, 13, 239, 137, 253, 99, 191, 42, 99, 111, 230, 7, 33, 2, 196, 201, 140, 78, 80, 64, 157, 66, 117, 170, 7, 246, 42, 28, 23, 198, 180, 62, 154, 34, 85, 130, 144, 135, 219, 117, 219, 200, 21, 178, 137, 189, 123, 166, 64, 6, 47, 252, 172, 213, 107, 84, 51, 106, 220, 195, 124, 227, 205, 64, 180, 49, 44, 225, 145, 48, 30, 219, 219, 137, 151, 239, 66, 132, 97, 92, 71, 161, 220, 250, 37, 125, 104, 99, 47, 179, 175, 72, 194, 236, 231, 38, 201, 67, 243, 136, 55, 131, 27, 125, 168, 63, 198, 190, 210, 106, 110, 16, 171, 179, 44, 80, 69, 99, 154, 94, 23, 164 } });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 101,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 183, 223, 126, 192, 214, 128, 47, 207, 173, 243, 95, 76, 23, 112, 80, 223, 112, 142, 223, 119, 174, 10, 90, 55, 82, 25, 68, 195, 68, 250, 129, 116, 247, 187, 212, 99, 191, 47, 39, 168, 212, 34, 47, 115, 113, 35, 51, 152, 15, 153, 9, 183, 76, 76, 250, 34, 30, 80, 174, 95, 65, 219, 48, 90 }, new byte[] { 183, 242, 60, 241, 12, 104, 48, 200, 183, 22, 195, 40, 172, 5, 213, 105, 249, 80, 213, 149, 203, 225, 127, 204, 136, 245, 93, 140, 12, 137, 156, 110, 214, 214, 9, 4, 99, 164, 82, 145, 134, 26, 219, 24, 52, 47, 162, 49, 14, 223, 170, 245, 152, 15, 18, 187, 39, 229, 243, 16, 84, 223, 16, 82, 112, 138, 140, 160, 123, 160, 248, 66, 218, 110, 186, 142, 44, 94, 235, 107, 1, 175, 185, 195, 76, 179, 57, 194, 72, 154, 29, 227, 120, 115, 220, 176, 184, 172, 189, 110, 254, 249, 38, 179, 166, 32, 67, 224, 71, 151, 201, 205, 245, 141, 103, 86, 168, 69, 167, 45, 10, 46, 240, 168, 10, 2, 160, 110 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 102,
                columns: new[] { "PasswordHash", "PasswordHashKey" },
                values: new object[] { new byte[] { 171, 197, 64, 156, 129, 191, 215, 139, 140, 212, 183, 42, 10, 237, 125, 108, 66, 0, 17, 6, 114, 43, 165, 66, 221, 152, 79, 99, 71, 101, 152, 5, 180, 138, 213, 100, 141, 185, 11, 184, 132, 193, 218, 12, 87, 108, 80, 63, 25, 155, 181, 182, 55, 125, 161, 4, 223, 77, 118, 27, 78, 77, 169, 173 }, new byte[] { 183, 242, 60, 241, 12, 104, 48, 200, 183, 22, 195, 40, 172, 5, 213, 105, 249, 80, 213, 149, 203, 225, 127, 204, 136, 245, 93, 140, 12, 137, 156, 110, 214, 214, 9, 4, 99, 164, 82, 145, 134, 26, 219, 24, 52, 47, 162, 49, 14, 223, 170, 245, 152, 15, 18, 187, 39, 229, 243, 16, 84, 223, 16, 82, 112, 138, 140, 160, 123, 160, 248, 66, 218, 110, 186, 142, 44, 94, 235, 107, 1, 175, 185, 195, 76, 179, 57, 194, 72, 154, 29, 227, 120, 115, 220, 176, 184, 172, 189, 110, 254, 249, 38, 179, 166, 32, 67, 224, 71, 151, 201, 205, 245, 141, 103, 86, 168, 69, 167, 45, 10, 46, 240, 168, 10, 2, 160, 110 } });
        }
    }
}
